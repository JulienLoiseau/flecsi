<map id="flecsi::utils::is_container&lt; T, voided&lt; typename T::value_type, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;typename T::size_type, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;typename T::allocator_type, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;typename T::iterator, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;typename T::const_iterator, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;decltype(std::declval&lt; T &gt;().size()), &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;decltype(std::declval&lt; T &gt;().begin()), &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;decltype(std::declval&lt; T &gt;().end()), &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;decltype(std::declval&lt; T &gt;().cbegin()), &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;decltype(std::declval&lt; T &gt;().cend()), &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;decltype(std::declval&lt; T &gt;().data())&gt; &gt;" name="flecsi::utils::is_container&lt; T, voided&lt; typename T::value_type, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;typename T::size_type, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;typename T::allocator_type, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;typename T::iterator, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;typename T::const_iterator, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;decltype(std::declval&lt; T &gt;().size()), &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;decltype(std::declval&lt; T &gt;().begin()), &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;decltype(std::declval&lt; T &gt;().end()), &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;decltype(std::declval&lt; T &gt;().cbegin()), &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;decltype(std::declval&lt; T &gt;().cend()), &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;decltype(std::declval&lt; T &gt;().data())&gt; &gt;">
</map>
