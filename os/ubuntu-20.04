#------------------------------------------------------------------------------#
# FleCSI CI Configuration for Ubuntu 20.04
#------------------------------------------------------------------------------#

FROM ubuntu:20.04

#------------------------------------------------------------------------------#
# Install basic linux requirements
#------------------------------------------------------------------------------#

RUN apt-get update
RUN apt-get install -y apt-utils

RUN \
  export DEBIAN_FRONTEND=noninteractive && \
  apt-get install -y tzdata && \
  ln -fs /usr/share/zoneinfo/America/Denver /etc/localtime && \
  dpkg-reconfigure --frontend noninteractive tzdata
  
RUN \
  export DEBIAN_FRONTEND=noninteractive && \
  apt-get upgrade -y && apt-get install -y \
  clang \
  curl \
  doxygen \
  emacs \
  file \
  flex \
  gcc-9 \
  gfortran-9 \
  git \
  graphviz \
  libgraphviz-dev \
  lbzip2 \
  make \
  passwd \
  patch \
  python3 \
  python3-pip \
  vim \
  wget \
  xz-utils

#------------------------------------------------------------------------------#
# Enable root for debugging
#------------------------------------------------------------------------------#

RUN echo 'root:flecsi' | chpasswd

#------------------------------------------------------------------------------#
# Add flecsi user
#------------------------------------------------------------------------------#

RUN groupadd -r flecsi
RUN useradd -r -m -g flecsi flecsi

USER flecsi
WORKDIR /home/flecsi

RUN \
  echo "syntax on" > .vimrc && \
  echo "set background=dark" >> .vimrc && \
  echo "highlight Comment cterm=italic" >> .vimrc

#------------------------------------------------------------------------------#
# Capture graphviz version
#------------------------------------------------------------------------------#

RUN apt-cache policy graphviz | grep Installed | \
  awk '{ print $2 }' | sed 's,\-.*,,g' > .graphviz_version
RUN apt-cache policy libncurses-dev | grep Installed | \
  awk '{ print $2 }' | sed 's,\-.*,,g' > .ncurses_version
RUN gcc -v 2>&1 | grep "gcc version" | awk '{ print $3 }' > .gnu_version

#------------------------------------------------------------------------------#
# Set default shell for interactive
#------------------------------------------------------------------------------#

CMD /bin/bash

# vim: syntax=dockerfile
